How did viewing a diff between two versions of a file help you see the bug that was introduced?

It helped to show the lines
where there was a change in code.
In seeing the lines that were different,
it was easier to see where the changes
occurred.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

I could be able to see what parts of
my code I was focusing on. This could
be either I was having trouble with or
I was trying to improve. I would be able
to pinpoint what parts of my code I was
devoting my attention to and seeing
how these changes led to the current version.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

Pros: the user is in complete control of how often to commit and what changes to commit
Cons: the user could be prone to forgetting to commit

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

So it is easier to see the state of all things during a specific snapshot in time. This may be helpful especially when the files are inter-related.

How can you use the commands git log and git diff to view the history of files?

Use git log to get an overview of changes made during each commit and then use git diff to see the specific changes in lines among files.

How might using version control make you more confident to make changes that could break something?

Knowing that you can always go back to previous versions of your work can make you more confident in experimentation and trying out new things and playing around with the code.

Now that you have your workspace set up, what do you want to try using Git for?

I want to try using it for solving homework and when working on projects.